// client/components/WalletProvider.js
import { createContext, useState } from "react";
import { Client, PrivateKey } from "@hashgraph/sdk";
import { ethers } from "ethers";

export const WalletContext = createContext();

export const WalletProvider = ({ children }) => {
  const [wallet, setWallet] = useState(null);
  const [provider, setProvider] = useState(null);

  const connectWallet = async () => {
    try {
      const client = Client.forTestnet();
      client.setOperator(
        process.env.HEDERA_ACCOUNT_ID,
        PrivateKey.fromStringECDSA(process.env.HEDERA_PRIVATE_KEY)
      );

      const ethersProvider = new ethers.providers.JsonRpcProvider(process.env.HEDERA_JSON_RPC_URL);
      setWallet(client);
      setProvider(ethersProvider);
    } catch (error) {
      console.error("Wallet connection failed:", error);
    }
  };

  return (
    <WalletContext.Provider  value ={{ wallet, provider, connectWallet }}>
      {children}
    </WalletContext.Provider>
  );
};